# Программа для поиска наибольшего общего делителя (НОД)
# Вход: пара чисел (два числа)
# Выход: НОД пары чисел (число)

# Функция вычисления НОД
# Основана на алгоритме Эвклида и лемме о том, что НОД пары чисел и целочисленного остатка от деления одного числа на другое - один и тот же. При a>=b>0 и r - остатке от деления a на b:
# НОД(a, b) = НОД(r, b) = НОД(a % b, b) = НОД(a - b, b) = НОД (r, b % r)
def gcd(a, b):
    mini = min(a, b)                    # минимальное число из пары входных
    maxi = max(a, b)                    # минимальное число из пары входных
    while (mini > 0):                   # пока наименьшее число не занулилось
        ost = maxi%mini                 # находим целочисленный остаток от деления большего числа на меньшее (он будет меньше меньшего)
        maxi = mini                     # обновляем большее значение
        mini = ost                      # обновляем меньшее значение
    return maxi


def main():
    a, b = map(int, input().split())
    print("GCD =", gcd(a, b))


if __name__ == "__main__":
    main()